class   : Keyword_Class
Pair   : Id
{   : LBrace
first   : Id
second   : Id
}   : RBrace
class   : Keyword_Class
List   : Id
{   : LBrace
data   : Id
tailList   : Id
}   : RBrace
class   : Keyword_Class
BinTree   : Id
{   : LBrace
data   : Id
leftSubtree   : Id
rightSubTree   : Id
}   : RBrace
(   : LParen
(   : LParen
examplePair   : Id
)   : RParen
(   : LParen
Pair   : Id
(   : LParen
Pair   : Id
1   : Int
2   : Int
)   : RParen
(   : LParen
Pair   : Id
3   : Int
4   : Int
)   : RParen
)   : RParen
)   : RParen
(   : LParen
(   : LParen
exampleList   : Id
)   : RParen
(   : LParen
List   : Id
1   : Int
(   : LParen
List   : Id
2   : Int
(   : LParen
List   : Id
3   : Int
null   : Keyword_Null
)   : RParen
)   : RParen
)   : RParen
)   : RParen
(   : LParen
(   : LParen
exampleBinTree   : Id
)   : RParen
(   : LParen
BinTree   : Id
1   : Int
(   : LParen
BinTree   : Id
2   : Int
null   : Keyword_Null
null   : Keyword_Null
)   : RParen
(   : LParen
BinTree   : Id
3   : Int
null   : Keyword_Null
null   : Keyword_Null
)   : RParen
)   : RParen
)   : RParen
(   : LParen
(   : LParen
buildList   : Id
i   : Id
)   : RParen
(   : LParen
if   : Keyword_If
(   : LParen
=   : Eq
i   : Id
0   : Int
)   : RParen
null   : Keyword_Null
(   : LParen
List   : Id
i   : Id
(   : LParen
buildList   : Id
(   : LParen
-   : Sub
i   : Id
1   : Int
)   : RParen
)   : RParen
)   : RParen
)   : RParen
)   : RParen
(   : LParen
(   : LParen
listLength   : Id
list   : Id
)   : RParen
(   : LParen
if   : Keyword_If
(   : LParen
=   : Eq
list   : Id
null   : Keyword_Null
)   : RParen
0   : Int
(   : LParen
+   : Add
1   : Int
(   : LParen
listLength   : Id
(   : LParen
tailList   : Id
list   : Id
)   : RParen
)   : RParen
)   : RParen
)   : RParen
)   : RParen
(   : LParen
(   : LParen
max   : Id
x   : Id
y   : Id
)   : RParen
(   : LParen
if   : Keyword_If
(   : LParen
>=   : Ge
x   : Id
y   : Id
)   : RParen
x   : Id
y   : Id
)   : RParen
)   : RParen
(   : LParen
(   : LParen
binTreeHeight   : Id
bt   : Id
)   : RParen
(   : LParen
if   : Keyword_If
(   : LParen
=   : Eq
bt   : Id
null   : Keyword_Null
)   : RParen
0   : Int
(   : LParen
max   : Id
(   : LParen
binTreeHeight   : Id
(   : LParen
leftSubTree   : Id
bt   : Id
)   : RParen
)   : RParen
(   : LParen
binTreeHeight   : Id
(   : LParen
rightSubTree   : Id
bt   : Id
)   : RParen
)   : RParen
)   : RParen
)   : RParen
)   : RParen
