{   : LBrace
a1   : Id
=   : Assign
1   : Int
;   : SemiColon
a2   : Id
=   : Assign
2   : Int
;   : SemiColon
a3   : Id
=   : Assign
3   : Int
;   : SemiColon
a4   : Id
=   : Assign
4   : Int
;   : SemiColon
b1   : Id
=   : Assign
1   : Int
;   : SemiColon
b2   : Id
=   : Assign
2   : Int
;   : SemiColon
b3   : Id
=   : Assign
3   : Int
;   : SemiColon
b4   : Id
=   : Assign
4   : Int
;   : SemiColon
y1   : Id
=   : Assign
a1   : Id
<   : LessThan
a2   : Id
;   : SemiColon
y2   : Id
=   : Assign
a3   : Id
==   : Equal
b3   : Id
;   : SemiColon
y3   : Id
=   : Assign
a4   : Id
>   : GreaterThan
b1   : Id
;   : SemiColon
z1   : Id
=   : Assign
b2   : Id
<=   : LessThanEqual
b3   : Id
;   : SemiColon
z2   : Id
=   : Assign
b3   : Id
!=   : NotEqual
b4   : Id
;   : SemiColon
z3   : Id
=   : Assign
a1   : Id
>=   : GreaterThanEqual
b4   : Id
;   : SemiColon
a   : Id
=   : Assign
(   : LParen
a1   : Id
+   : Plus
a2   : Id
-   : Minus
a3   : Id
-   : Minus
a4   : Id
)   : RParen
*   : Times
(   : LParen
b1   : Id
-   : Minus
b2   : Id
+   : Plus
b3   : Id
+   : Plus
b4   : Id
)   : RParen
;   : SemiColon
x   : Id
=   : Assign
y1   : Id
&&   : And
y2   : Id
&&   : And
y3   : Id
||   : Or
z1   : Id
&&   : And
z2   : Id
&&   : And
z3   : Id
;   : SemiColon
b   : Id
=   : Assign
!   : Inverse
!   : Inverse
!   : Inverse
x   : Id
;   : SemiColon
}   : RBrace
